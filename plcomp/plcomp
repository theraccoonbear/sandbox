#!/usr/bin/env perl
use strict;
use warnings;

my $cpanm = `which cpanm`;
chomp($cpanm);

if (! -f $cpanm) {
    `mkdir -p ~/bin && cd ~/bin && curl -L https://cpanmin.us/ -o cpanm && chmod +x cpanm`;
    $cpanm = `which cpanm`;
}

sub modPath {
    my $module = shift @_;
    my $mod_path = `perldoc -l $module 2> /dev/null`;
    chomp($mod_path);
    return $mod_path;
}

sub installIfAbsent {
    my $module = shift @_;
    my $mod_path = modPath($module);
    print "$module : $mod_path\n";
    if (! -f $mod_path) {
        print "Couldn't find $module.  Tring to install...\n";
        `sudo cpanm -v $module`;
        $mod_path = modPath($module);
        if (-f $mod_path) {
            print "...SUCCESS!\n";
        } else {
            print "...FAILURE!\n";
        }
        
    }
    return $mod_path;
}

installIfAbsent('JSON::XS');
installIfAbsent('File::Slurp');
#installIfAbsent('Data::Printer');

eval {
    use JSON::XS;
    use File::Slurp;
    #use Data::Printer;
};
die $@ if $@;

if (!$ARGV[0] || ! -f $ARGV[0]) {
    print "Usage:\n";
    print "  plcomp <your-file>.json\n\n";
    exit(0);
}

my $data = decode_json(read_file($ARGV[0]));
if (! $data->{require}) {
    print "Uh oh, no requires!";
    exit(0);
}

foreach my $req (@{ $data->{require} }) {
    installIfAbsent($req->{name});
}
